
play_withtimer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a84  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00000a84  00000b18  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  00800062  00800062  00000b1a  2**0
                  ALLOC
  3 .stab         000016b0  00000000  00000000  00000b1c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000004c0  00000000  00000000  000021cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000120  00000000  00000000  00002690  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ef4  00000000  00000000  000027b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000417  00000000  00000000  000036a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004a3  00000000  00000000  00003abb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000518  00000000  00000000  00003f60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008a2  00000000  00000000  00004478  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008e8  00000000  00000000  00004d1a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 7a 03 	jmp	0x6f4	; 0x6f4 <__vector_6>
  1c:	0c 94 a3 03 	jmp	0x746	; 0x746 <__vector_7>
  20:	0c 94 cc 03 	jmp	0x798	; 0x798 <__vector_8>
  24:	0c 94 f5 03 	jmp	0x7ea	; 0x7ea <__vector_9>
  28:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__vector_10>
  2c:	0c 94 b8 02 	jmp	0x570	; 0x570 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e8       	ldi	r30, 0x84	; 132
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a2 e6       	ldi	r26, 0x62	; 98
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 37       	cpi	r26, 0x72	; 114
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 02 	call	0x492	; 0x492 <main>
  8a:	0c 94 40 05 	jmp	0xa80	; 0xa80 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <dio_vidConfigChannel>:
  92:	81 30       	cpi	r24, 0x01	; 1
  94:	31 f1       	breq	.+76     	; 0xe2 <dio_vidConfigChannel+0x50>
  96:	81 30       	cpi	r24, 0x01	; 1
  98:	38 f0       	brcs	.+14     	; 0xa8 <dio_vidConfigChannel+0x16>
  9a:	82 30       	cpi	r24, 0x02	; 2
  9c:	09 f4       	brne	.+2      	; 0xa0 <dio_vidConfigChannel+0xe>
  9e:	3e c0       	rjmp	.+124    	; 0x11c <dio_vidConfigChannel+0x8a>
  a0:	83 30       	cpi	r24, 0x03	; 3
  a2:	09 f0       	breq	.+2      	; 0xa6 <dio_vidConfigChannel+0x14>
  a4:	74 c0       	rjmp	.+232    	; 0x18e <dio_vidConfigChannel+0xfc>
  a6:	57 c0       	rjmp	.+174    	; 0x156 <dio_vidConfigChannel+0xc4>
  a8:	41 30       	cpi	r20, 0x01	; 1
  aa:	69 f4       	brne	.+26     	; 0xc6 <dio_vidConfigChannel+0x34>
  ac:	2a b3       	in	r18, 0x1a	; 26
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	ac 01       	movw	r20, r24
  b4:	02 c0       	rjmp	.+4      	; 0xba <dio_vidConfigChannel+0x28>
  b6:	44 0f       	add	r20, r20
  b8:	55 1f       	adc	r21, r21
  ba:	6a 95       	dec	r22
  bc:	e2 f7       	brpl	.-8      	; 0xb6 <dio_vidConfigChannel+0x24>
  be:	ba 01       	movw	r22, r20
  c0:	62 2b       	or	r22, r18
  c2:	6a bb       	out	0x1a, r22	; 26
  c4:	08 95       	ret
  c6:	2a b3       	in	r18, 0x1a	; 26
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	ac 01       	movw	r20, r24
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <dio_vidConfigChannel+0x42>
  d0:	44 0f       	add	r20, r20
  d2:	55 1f       	adc	r21, r21
  d4:	6a 95       	dec	r22
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <dio_vidConfigChannel+0x3e>
  d8:	ba 01       	movw	r22, r20
  da:	60 95       	com	r22
  dc:	62 23       	and	r22, r18
  de:	6a bb       	out	0x1a, r22	; 26
  e0:	08 95       	ret
  e2:	41 30       	cpi	r20, 0x01	; 1
  e4:	69 f4       	brne	.+26     	; 0x100 <dio_vidConfigChannel+0x6e>
  e6:	27 b3       	in	r18, 0x17	; 23
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	ac 01       	movw	r20, r24
  ee:	02 c0       	rjmp	.+4      	; 0xf4 <dio_vidConfigChannel+0x62>
  f0:	44 0f       	add	r20, r20
  f2:	55 1f       	adc	r21, r21
  f4:	6a 95       	dec	r22
  f6:	e2 f7       	brpl	.-8      	; 0xf0 <dio_vidConfigChannel+0x5e>
  f8:	ba 01       	movw	r22, r20
  fa:	62 2b       	or	r22, r18
  fc:	67 bb       	out	0x17, r22	; 23
  fe:	08 95       	ret
 100:	27 b3       	in	r18, 0x17	; 23
 102:	81 e0       	ldi	r24, 0x01	; 1
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	ac 01       	movw	r20, r24
 108:	02 c0       	rjmp	.+4      	; 0x10e <dio_vidConfigChannel+0x7c>
 10a:	44 0f       	add	r20, r20
 10c:	55 1f       	adc	r21, r21
 10e:	6a 95       	dec	r22
 110:	e2 f7       	brpl	.-8      	; 0x10a <dio_vidConfigChannel+0x78>
 112:	ba 01       	movw	r22, r20
 114:	60 95       	com	r22
 116:	62 23       	and	r22, r18
 118:	67 bb       	out	0x17, r22	; 23
 11a:	08 95       	ret
 11c:	41 30       	cpi	r20, 0x01	; 1
 11e:	69 f4       	brne	.+26     	; 0x13a <dio_vidConfigChannel+0xa8>
 120:	24 b3       	in	r18, 0x14	; 20
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	ac 01       	movw	r20, r24
 128:	02 c0       	rjmp	.+4      	; 0x12e <dio_vidConfigChannel+0x9c>
 12a:	44 0f       	add	r20, r20
 12c:	55 1f       	adc	r21, r21
 12e:	6a 95       	dec	r22
 130:	e2 f7       	brpl	.-8      	; 0x12a <dio_vidConfigChannel+0x98>
 132:	ba 01       	movw	r22, r20
 134:	62 2b       	or	r22, r18
 136:	64 bb       	out	0x14, r22	; 20
 138:	08 95       	ret
 13a:	24 b3       	in	r18, 0x14	; 20
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	ac 01       	movw	r20, r24
 142:	02 c0       	rjmp	.+4      	; 0x148 <dio_vidConfigChannel+0xb6>
 144:	44 0f       	add	r20, r20
 146:	55 1f       	adc	r21, r21
 148:	6a 95       	dec	r22
 14a:	e2 f7       	brpl	.-8      	; 0x144 <dio_vidConfigChannel+0xb2>
 14c:	ba 01       	movw	r22, r20
 14e:	60 95       	com	r22
 150:	62 23       	and	r22, r18
 152:	64 bb       	out	0x14, r22	; 20
 154:	08 95       	ret
 156:	41 30       	cpi	r20, 0x01	; 1
 158:	69 f4       	brne	.+26     	; 0x174 <dio_vidConfigChannel+0xe2>
 15a:	21 b3       	in	r18, 0x11	; 17
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	ac 01       	movw	r20, r24
 162:	02 c0       	rjmp	.+4      	; 0x168 <dio_vidConfigChannel+0xd6>
 164:	44 0f       	add	r20, r20
 166:	55 1f       	adc	r21, r21
 168:	6a 95       	dec	r22
 16a:	e2 f7       	brpl	.-8      	; 0x164 <dio_vidConfigChannel+0xd2>
 16c:	ba 01       	movw	r22, r20
 16e:	62 2b       	or	r22, r18
 170:	61 bb       	out	0x11, r22	; 17
 172:	08 95       	ret
 174:	21 b3       	in	r18, 0x11	; 17
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	ac 01       	movw	r20, r24
 17c:	02 c0       	rjmp	.+4      	; 0x182 <dio_vidConfigChannel+0xf0>
 17e:	44 0f       	add	r20, r20
 180:	55 1f       	adc	r21, r21
 182:	6a 95       	dec	r22
 184:	e2 f7       	brpl	.-8      	; 0x17e <dio_vidConfigChannel+0xec>
 186:	ba 01       	movw	r22, r20
 188:	60 95       	com	r22
 18a:	62 23       	and	r22, r18
 18c:	61 bb       	out	0x11, r22	; 17
 18e:	08 95       	ret

00000190 <dio_vidWriteChannel>:
 190:	81 30       	cpi	r24, 0x01	; 1
 192:	31 f1       	breq	.+76     	; 0x1e0 <dio_vidWriteChannel+0x50>
 194:	81 30       	cpi	r24, 0x01	; 1
 196:	38 f0       	brcs	.+14     	; 0x1a6 <dio_vidWriteChannel+0x16>
 198:	82 30       	cpi	r24, 0x02	; 2
 19a:	09 f4       	brne	.+2      	; 0x19e <dio_vidWriteChannel+0xe>
 19c:	3e c0       	rjmp	.+124    	; 0x21a <dio_vidWriteChannel+0x8a>
 19e:	83 30       	cpi	r24, 0x03	; 3
 1a0:	09 f0       	breq	.+2      	; 0x1a4 <dio_vidWriteChannel+0x14>
 1a2:	74 c0       	rjmp	.+232    	; 0x28c <dio_vidWriteChannel+0xfc>
 1a4:	57 c0       	rjmp	.+174    	; 0x254 <dio_vidWriteChannel+0xc4>
 1a6:	44 23       	and	r20, r20
 1a8:	71 f4       	brne	.+28     	; 0x1c6 <dio_vidWriteChannel+0x36>
 1aa:	2b b3       	in	r18, 0x1b	; 27
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	ac 01       	movw	r20, r24
 1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <dio_vidWriteChannel+0x28>
 1b4:	44 0f       	add	r20, r20
 1b6:	55 1f       	adc	r21, r21
 1b8:	6a 95       	dec	r22
 1ba:	e2 f7       	brpl	.-8      	; 0x1b4 <dio_vidWriteChannel+0x24>
 1bc:	ba 01       	movw	r22, r20
 1be:	60 95       	com	r22
 1c0:	62 23       	and	r22, r18
 1c2:	6b bb       	out	0x1b, r22	; 27
 1c4:	08 95       	ret
 1c6:	2b b3       	in	r18, 0x1b	; 27
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	ac 01       	movw	r20, r24
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <dio_vidWriteChannel+0x44>
 1d0:	44 0f       	add	r20, r20
 1d2:	55 1f       	adc	r21, r21
 1d4:	6a 95       	dec	r22
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <dio_vidWriteChannel+0x40>
 1d8:	ba 01       	movw	r22, r20
 1da:	62 2b       	or	r22, r18
 1dc:	6b bb       	out	0x1b, r22	; 27
 1de:	08 95       	ret
 1e0:	44 23       	and	r20, r20
 1e2:	71 f4       	brne	.+28     	; 0x200 <dio_vidWriteChannel+0x70>
 1e4:	28 b3       	in	r18, 0x18	; 24
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	ac 01       	movw	r20, r24
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <dio_vidWriteChannel+0x62>
 1ee:	44 0f       	add	r20, r20
 1f0:	55 1f       	adc	r21, r21
 1f2:	6a 95       	dec	r22
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <dio_vidWriteChannel+0x5e>
 1f6:	ba 01       	movw	r22, r20
 1f8:	60 95       	com	r22
 1fa:	62 23       	and	r22, r18
 1fc:	68 bb       	out	0x18, r22	; 24
 1fe:	08 95       	ret
 200:	28 b3       	in	r18, 0x18	; 24
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	ac 01       	movw	r20, r24
 208:	02 c0       	rjmp	.+4      	; 0x20e <dio_vidWriteChannel+0x7e>
 20a:	44 0f       	add	r20, r20
 20c:	55 1f       	adc	r21, r21
 20e:	6a 95       	dec	r22
 210:	e2 f7       	brpl	.-8      	; 0x20a <dio_vidWriteChannel+0x7a>
 212:	ba 01       	movw	r22, r20
 214:	62 2b       	or	r22, r18
 216:	68 bb       	out	0x18, r22	; 24
 218:	08 95       	ret
 21a:	44 23       	and	r20, r20
 21c:	71 f4       	brne	.+28     	; 0x23a <dio_vidWriteChannel+0xaa>
 21e:	25 b3       	in	r18, 0x15	; 21
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	ac 01       	movw	r20, r24
 226:	02 c0       	rjmp	.+4      	; 0x22c <dio_vidWriteChannel+0x9c>
 228:	44 0f       	add	r20, r20
 22a:	55 1f       	adc	r21, r21
 22c:	6a 95       	dec	r22
 22e:	e2 f7       	brpl	.-8      	; 0x228 <dio_vidWriteChannel+0x98>
 230:	ba 01       	movw	r22, r20
 232:	60 95       	com	r22
 234:	62 23       	and	r22, r18
 236:	65 bb       	out	0x15, r22	; 21
 238:	08 95       	ret
 23a:	25 b3       	in	r18, 0x15	; 21
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	ac 01       	movw	r20, r24
 242:	02 c0       	rjmp	.+4      	; 0x248 <dio_vidWriteChannel+0xb8>
 244:	44 0f       	add	r20, r20
 246:	55 1f       	adc	r21, r21
 248:	6a 95       	dec	r22
 24a:	e2 f7       	brpl	.-8      	; 0x244 <dio_vidWriteChannel+0xb4>
 24c:	ba 01       	movw	r22, r20
 24e:	62 2b       	or	r22, r18
 250:	65 bb       	out	0x15, r22	; 21
 252:	08 95       	ret
 254:	44 23       	and	r20, r20
 256:	71 f4       	brne	.+28     	; 0x274 <dio_vidWriteChannel+0xe4>
 258:	22 b3       	in	r18, 0x12	; 18
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	ac 01       	movw	r20, r24
 260:	02 c0       	rjmp	.+4      	; 0x266 <dio_vidWriteChannel+0xd6>
 262:	44 0f       	add	r20, r20
 264:	55 1f       	adc	r21, r21
 266:	6a 95       	dec	r22
 268:	e2 f7       	brpl	.-8      	; 0x262 <dio_vidWriteChannel+0xd2>
 26a:	ba 01       	movw	r22, r20
 26c:	60 95       	com	r22
 26e:	62 23       	and	r22, r18
 270:	62 bb       	out	0x12, r22	; 18
 272:	08 95       	ret
 274:	22 b3       	in	r18, 0x12	; 18
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	ac 01       	movw	r20, r24
 27c:	02 c0       	rjmp	.+4      	; 0x282 <dio_vidWriteChannel+0xf2>
 27e:	44 0f       	add	r20, r20
 280:	55 1f       	adc	r21, r21
 282:	6a 95       	dec	r22
 284:	e2 f7       	brpl	.-8      	; 0x27e <dio_vidWriteChannel+0xee>
 286:	ba 01       	movw	r22, r20
 288:	62 2b       	or	r22, r18
 28a:	62 bb       	out	0x12, r22	; 18
 28c:	08 95       	ret

0000028e <dio_vidWriteChannelGroup>:
 28e:	08 95       	ret

00000290 <dio_vidFlipChannel>:
 290:	81 30       	cpi	r24, 0x01	; 1
 292:	a1 f0       	breq	.+40     	; 0x2bc <dio_vidFlipChannel+0x2c>
 294:	81 30       	cpi	r24, 0x01	; 1
 296:	28 f0       	brcs	.+10     	; 0x2a2 <dio_vidFlipChannel+0x12>
 298:	82 30       	cpi	r24, 0x02	; 2
 29a:	e9 f0       	breq	.+58     	; 0x2d6 <dio_vidFlipChannel+0x46>
 29c:	83 30       	cpi	r24, 0x03	; 3
 29e:	a1 f5       	brne	.+104    	; 0x308 <dio_vidFlipChannel+0x78>
 2a0:	27 c0       	rjmp	.+78     	; 0x2f0 <dio_vidFlipChannel+0x60>
 2a2:	2b b3       	in	r18, 0x1b	; 27
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	ac 01       	movw	r20, r24
 2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <dio_vidFlipChannel+0x20>
 2ac:	44 0f       	add	r20, r20
 2ae:	55 1f       	adc	r21, r21
 2b0:	6a 95       	dec	r22
 2b2:	e2 f7       	brpl	.-8      	; 0x2ac <dio_vidFlipChannel+0x1c>
 2b4:	ba 01       	movw	r22, r20
 2b6:	62 27       	eor	r22, r18
 2b8:	6b bb       	out	0x1b, r22	; 27
 2ba:	08 95       	ret
 2bc:	28 b3       	in	r18, 0x18	; 24
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	ac 01       	movw	r20, r24
 2c4:	02 c0       	rjmp	.+4      	; 0x2ca <dio_vidFlipChannel+0x3a>
 2c6:	44 0f       	add	r20, r20
 2c8:	55 1f       	adc	r21, r21
 2ca:	6a 95       	dec	r22
 2cc:	e2 f7       	brpl	.-8      	; 0x2c6 <dio_vidFlipChannel+0x36>
 2ce:	ba 01       	movw	r22, r20
 2d0:	62 27       	eor	r22, r18
 2d2:	68 bb       	out	0x18, r22	; 24
 2d4:	08 95       	ret
 2d6:	25 b3       	in	r18, 0x15	; 21
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	ac 01       	movw	r20, r24
 2de:	02 c0       	rjmp	.+4      	; 0x2e4 <dio_vidFlipChannel+0x54>
 2e0:	44 0f       	add	r20, r20
 2e2:	55 1f       	adc	r21, r21
 2e4:	6a 95       	dec	r22
 2e6:	e2 f7       	brpl	.-8      	; 0x2e0 <dio_vidFlipChannel+0x50>
 2e8:	ba 01       	movw	r22, r20
 2ea:	62 27       	eor	r22, r18
 2ec:	65 bb       	out	0x15, r22	; 21
 2ee:	08 95       	ret
 2f0:	22 b3       	in	r18, 0x12	; 18
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	ac 01       	movw	r20, r24
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <dio_vidFlipChannel+0x6e>
 2fa:	44 0f       	add	r20, r20
 2fc:	55 1f       	adc	r21, r21
 2fe:	6a 95       	dec	r22
 300:	e2 f7       	brpl	.-8      	; 0x2fa <dio_vidFlipChannel+0x6a>
 302:	ba 01       	movw	r22, r20
 304:	62 27       	eor	r22, r18
 306:	62 bb       	out	0x12, r22	; 18
 308:	08 95       	ret

0000030a <dio_dioLevelReadChannel>:
 30a:	81 30       	cpi	r24, 0x01	; 1
 30c:	89 f0       	breq	.+34     	; 0x330 <dio_dioLevelReadChannel+0x26>
 30e:	81 30       	cpi	r24, 0x01	; 1
 310:	28 f0       	brcs	.+10     	; 0x31c <dio_dioLevelReadChannel+0x12>
 312:	82 30       	cpi	r24, 0x02	; 2
 314:	b9 f0       	breq	.+46     	; 0x344 <dio_dioLevelReadChannel+0x3a>
 316:	83 30       	cpi	r24, 0x03	; 3
 318:	49 f5       	brne	.+82     	; 0x36c <dio_dioLevelReadChannel+0x62>
 31a:	1e c0       	rjmp	.+60     	; 0x358 <dio_dioLevelReadChannel+0x4e>
 31c:	29 b3       	in	r18, 0x19	; 25
 31e:	30 e0       	ldi	r19, 0x00	; 0
 320:	c9 01       	movw	r24, r18
 322:	02 c0       	rjmp	.+4      	; 0x328 <dio_dioLevelReadChannel+0x1e>
 324:	95 95       	asr	r25
 326:	87 95       	ror	r24
 328:	6a 95       	dec	r22
 32a:	e2 f7       	brpl	.-8      	; 0x324 <dio_dioLevelReadChannel+0x1a>
 32c:	81 70       	andi	r24, 0x01	; 1
 32e:	08 95       	ret
 330:	26 b3       	in	r18, 0x16	; 22
 332:	30 e0       	ldi	r19, 0x00	; 0
 334:	c9 01       	movw	r24, r18
 336:	02 c0       	rjmp	.+4      	; 0x33c <dio_dioLevelReadChannel+0x32>
 338:	95 95       	asr	r25
 33a:	87 95       	ror	r24
 33c:	6a 95       	dec	r22
 33e:	e2 f7       	brpl	.-8      	; 0x338 <dio_dioLevelReadChannel+0x2e>
 340:	81 70       	andi	r24, 0x01	; 1
 342:	08 95       	ret
 344:	23 b3       	in	r18, 0x13	; 19
 346:	30 e0       	ldi	r19, 0x00	; 0
 348:	c9 01       	movw	r24, r18
 34a:	02 c0       	rjmp	.+4      	; 0x350 <dio_dioLevelReadChannel+0x46>
 34c:	95 95       	asr	r25
 34e:	87 95       	ror	r24
 350:	6a 95       	dec	r22
 352:	e2 f7       	brpl	.-8      	; 0x34c <dio_dioLevelReadChannel+0x42>
 354:	81 70       	andi	r24, 0x01	; 1
 356:	08 95       	ret
 358:	20 b3       	in	r18, 0x10	; 16
 35a:	30 e0       	ldi	r19, 0x00	; 0
 35c:	c9 01       	movw	r24, r18
 35e:	02 c0       	rjmp	.+4      	; 0x364 <dio_dioLevelReadChannel+0x5a>
 360:	95 95       	asr	r25
 362:	87 95       	ror	r24
 364:	6a 95       	dec	r22
 366:	e2 f7       	brpl	.-8      	; 0x360 <dio_dioLevelReadChannel+0x56>
 368:	81 70       	andi	r24, 0x01	; 1
 36a:	08 95       	ret
 36c:	80 e0       	ldi	r24, 0x00	; 0
 36e:	08 95       	ret

00000370 <dio_vidEnablePullUp>:
 370:	08 95       	ret

00000372 <GIE_Enable>:
 372:	8f b7       	in	r24, 0x3f	; 63
 374:	80 68       	ori	r24, 0x80	; 128
 376:	8f bf       	out	0x3f, r24	; 63
 378:	08 95       	ret

0000037a <GIE_Disable>:
 37a:	8f b7       	in	r24, 0x3f	; 63
 37c:	8f 77       	andi	r24, 0x7F	; 127
 37e:	8f bf       	out	0x3f, r24	; 63
 380:	08 95       	ret

00000382 <led_init>:
 382:	81 e0       	ldi	r24, 0x01	; 1
 384:	67 e0       	ldi	r22, 0x07	; 7
 386:	41 e0       	ldi	r20, 0x01	; 1
 388:	0e 94 49 00 	call	0x92	; 0x92 <dio_vidConfigChannel>
 38c:	80 e0       	ldi	r24, 0x00	; 0
 38e:	64 e0       	ldi	r22, 0x04	; 4
 390:	41 e0       	ldi	r20, 0x01	; 1
 392:	0e 94 49 00 	call	0x92	; 0x92 <dio_vidConfigChannel>
 396:	80 e0       	ldi	r24, 0x00	; 0
 398:	65 e0       	ldi	r22, 0x05	; 5
 39a:	41 e0       	ldi	r20, 0x01	; 1
 39c:	0e 94 49 00 	call	0x92	; 0x92 <dio_vidConfigChannel>
 3a0:	80 e0       	ldi	r24, 0x00	; 0
 3a2:	66 e0       	ldi	r22, 0x06	; 6
 3a4:	41 e0       	ldi	r20, 0x01	; 1
 3a6:	0e 94 49 00 	call	0x92	; 0x92 <dio_vidConfigChannel>
 3aa:	08 95       	ret

000003ac <led_on>:
 3ac:	81 30       	cpi	r24, 0x01	; 1
 3ae:	69 f0       	breq	.+26     	; 0x3ca <led_on+0x1e>
 3b0:	81 30       	cpi	r24, 0x01	; 1
 3b2:	28 f0       	brcs	.+10     	; 0x3be <led_on+0x12>
 3b4:	82 30       	cpi	r24, 0x02	; 2
 3b6:	79 f0       	breq	.+30     	; 0x3d6 <led_on+0x2a>
 3b8:	83 30       	cpi	r24, 0x03	; 3
 3ba:	c1 f4       	brne	.+48     	; 0x3ec <led_on+0x40>
 3bc:	12 c0       	rjmp	.+36     	; 0x3e2 <led_on+0x36>
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	67 e0       	ldi	r22, 0x07	; 7
 3c2:	41 e0       	ldi	r20, 0x01	; 1
 3c4:	0e 94 c8 00 	call	0x190	; 0x190 <dio_vidWriteChannel>
 3c8:	08 95       	ret
 3ca:	80 e0       	ldi	r24, 0x00	; 0
 3cc:	64 e0       	ldi	r22, 0x04	; 4
 3ce:	41 e0       	ldi	r20, 0x01	; 1
 3d0:	0e 94 c8 00 	call	0x190	; 0x190 <dio_vidWriteChannel>
 3d4:	08 95       	ret
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	65 e0       	ldi	r22, 0x05	; 5
 3da:	41 e0       	ldi	r20, 0x01	; 1
 3dc:	0e 94 c8 00 	call	0x190	; 0x190 <dio_vidWriteChannel>
 3e0:	08 95       	ret
 3e2:	80 e0       	ldi	r24, 0x00	; 0
 3e4:	66 e0       	ldi	r22, 0x06	; 6
 3e6:	41 e0       	ldi	r20, 0x01	; 1
 3e8:	0e 94 c8 00 	call	0x190	; 0x190 <dio_vidWriteChannel>
 3ec:	08 95       	ret

000003ee <led_off>:
 3ee:	81 30       	cpi	r24, 0x01	; 1
 3f0:	69 f0       	breq	.+26     	; 0x40c <led_off+0x1e>
 3f2:	81 30       	cpi	r24, 0x01	; 1
 3f4:	28 f0       	brcs	.+10     	; 0x400 <led_off+0x12>
 3f6:	82 30       	cpi	r24, 0x02	; 2
 3f8:	79 f0       	breq	.+30     	; 0x418 <led_off+0x2a>
 3fa:	83 30       	cpi	r24, 0x03	; 3
 3fc:	c1 f4       	brne	.+48     	; 0x42e <led_off+0x40>
 3fe:	12 c0       	rjmp	.+36     	; 0x424 <led_off+0x36>
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	67 e0       	ldi	r22, 0x07	; 7
 404:	40 e0       	ldi	r20, 0x00	; 0
 406:	0e 94 c8 00 	call	0x190	; 0x190 <dio_vidWriteChannel>
 40a:	08 95       	ret
 40c:	80 e0       	ldi	r24, 0x00	; 0
 40e:	64 e0       	ldi	r22, 0x04	; 4
 410:	40 e0       	ldi	r20, 0x00	; 0
 412:	0e 94 c8 00 	call	0x190	; 0x190 <dio_vidWriteChannel>
 416:	08 95       	ret
 418:	80 e0       	ldi	r24, 0x00	; 0
 41a:	65 e0       	ldi	r22, 0x05	; 5
 41c:	40 e0       	ldi	r20, 0x00	; 0
 41e:	0e 94 c8 00 	call	0x190	; 0x190 <dio_vidWriteChannel>
 422:	08 95       	ret
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	66 e0       	ldi	r22, 0x06	; 6
 428:	40 e0       	ldi	r20, 0x00	; 0
 42a:	0e 94 c8 00 	call	0x190	; 0x190 <dio_vidWriteChannel>
 42e:	08 95       	ret

00000430 <led_toggle>:
 430:	81 30       	cpi	r24, 0x01	; 1
 432:	61 f0       	breq	.+24     	; 0x44c <led_toggle+0x1c>
 434:	81 30       	cpi	r24, 0x01	; 1
 436:	28 f0       	brcs	.+10     	; 0x442 <led_toggle+0x12>
 438:	82 30       	cpi	r24, 0x02	; 2
 43a:	69 f0       	breq	.+26     	; 0x456 <led_toggle+0x26>
 43c:	83 30       	cpi	r24, 0x03	; 3
 43e:	a1 f4       	brne	.+40     	; 0x468 <led_toggle+0x38>
 440:	0f c0       	rjmp	.+30     	; 0x460 <led_toggle+0x30>
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	67 e0       	ldi	r22, 0x07	; 7
 446:	0e 94 48 01 	call	0x290	; 0x290 <dio_vidFlipChannel>
 44a:	08 95       	ret
 44c:	80 e0       	ldi	r24, 0x00	; 0
 44e:	64 e0       	ldi	r22, 0x04	; 4
 450:	0e 94 48 01 	call	0x290	; 0x290 <dio_vidFlipChannel>
 454:	08 95       	ret
 456:	80 e0       	ldi	r24, 0x00	; 0
 458:	65 e0       	ldi	r22, 0x05	; 5
 45a:	0e 94 48 01 	call	0x290	; 0x290 <dio_vidFlipChannel>
 45e:	08 95       	ret
 460:	80 e0       	ldi	r24, 0x00	; 0
 462:	66 e0       	ldi	r22, 0x06	; 6
 464:	0e 94 48 01 	call	0x290	; 0x290 <dio_vidFlipChannel>
 468:	08 95       	ret

0000046a <led_tog>:
	while(1);
	
}
void led_tog()
{
	counter++ ;
 46a:	80 91 64 00 	lds	r24, 0x0064
 46e:	90 91 65 00 	lds	r25, 0x0065
 472:	01 96       	adiw	r24, 0x01	; 1
 474:	90 93 65 00 	sts	0x0065, r25
 478:	80 93 64 00 	sts	0x0064, r24
	//led_on(LED_RED) ;
	if(counter > 10)
 47c:	8b 30       	cpi	r24, 0x0B	; 11
 47e:	91 05       	cpc	r25, r1
 480:	38 f0       	brcs	.+14     	; 0x490 <led_tog+0x26>
	{
		led_toggle(LED_RED) ;
 482:	80 e0       	ldi	r24, 0x00	; 0
 484:	0e 94 18 02 	call	0x430	; 0x430 <led_toggle>
		//led_on(LED_RED);
		counter = 0 ;
 488:	10 92 65 00 	sts	0x0065, r1
 48c:	10 92 64 00 	sts	0x0064, r1
 490:	08 95       	ret

00000492 <main>:
void led2_tog();


void set_sec_toggle(u16 x );
int main( void )
{   led_init();
 492:	0e 94 c1 01 	call	0x382	; 0x382 <led_init>
	//SET_BIT(DIO_DDRB_REG,3);
	dio_vidConfigChannel(DIO_PORTB,DIO_PIN3,OUTPUT) ; 
 496:	81 e0       	ldi	r24, 0x01	; 1
 498:	63 e0       	ldi	r22, 0x03	; 3
 49a:	41 e0       	ldi	r20, 0x01	; 1
 49c:	0e 94 49 00 	call	0x92	; 0x92 <dio_vidConfigChannel>
	//TIMER0_void_SetOVCallBack(led_tog) ;
	TIMER1_void_SetOVCallBack(led_tog);
 4a0:	85 e3       	ldi	r24, 0x35	; 53
 4a2:	92 e0       	ldi	r25, 0x02	; 2
 4a4:	0e 94 5e 03 	call	0x6bc	; 0x6bc <TIMER1_void_SetOVCallBack>
	//TIMER0_void_SetCTCCallBack(led2_tog) ; 
	TIMER1_void_Init();
 4a8:	0e 94 0a 03 	call	0x614	; 0x614 <TIMER1_void_Init>
	//TIMER0_void_Init();
	TIMER1_void_EnableOVInt();
 4ac:	0e 94 3e 03 	call	0x67c	; 0x67c <TIMER1_void_EnableOVInt>
	//TIMER0_void_EnableOVInt() ;
	//TIMER0_void_EnableCTCInt();
	//TIMER0_void_SetCompareVal(128) ; 
	GIE_Enable();
 4b0:	0e 94 b9 01 	call	0x372	; 0x372 <GIE_Enable>
 4b4:	ff cf       	rjmp	.-2      	; 0x4b4 <main+0x22>

000004b6 <led2_tog>:
	}
}

void led2_tog()
{
	counter2++ ;
 4b6:	80 91 62 00 	lds	r24, 0x0062
 4ba:	90 91 63 00 	lds	r25, 0x0063
 4be:	01 96       	adiw	r24, 0x01	; 1
 4c0:	90 93 63 00 	sts	0x0063, r25
 4c4:	80 93 62 00 	sts	0x0062, r24
	if(counter2 > 100)
 4c8:	85 36       	cpi	r24, 0x65	; 101
 4ca:	91 05       	cpc	r25, r1
 4cc:	38 f0       	brcs	.+14     	; 0x4dc <led2_tog+0x26>
	{
		led_toggle(LED_GREEN) ;
 4ce:	81 e0       	ldi	r24, 0x01	; 1
 4d0:	0e 94 18 02 	call	0x430	; 0x430 <led_toggle>
		counter2 = 0 ;
 4d4:	10 92 63 00 	sts	0x0063, r1
 4d8:	10 92 62 00 	sts	0x0062, r1
 4dc:	08 95       	ret

000004de <set_sec_toggle>:
	}
}
void set_sec_toggle(u16 x )
{
	compare = (float )x/ ((1024 * 256.0) /8000000) ;
 4de:	bc 01       	movw	r22, r24
 4e0:	80 e0       	ldi	r24, 0x00	; 0
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	0e 94 b2 04 	call	0x964	; 0x964 <__floatunsisf>
 4e8:	2d eb       	ldi	r18, 0xBD	; 189
 4ea:	37 e3       	ldi	r19, 0x37	; 55
 4ec:	46 e0       	ldi	r20, 0x06	; 6
 4ee:	5d e3       	ldi	r21, 0x3D	; 61
 4f0:	0e 94 1e 04 	call	0x83c	; 0x83c <__divsf3>
 4f4:	0e 94 86 04 	call	0x90c	; 0x90c <__fixunssfsi>
 4f8:	dc 01       	movw	r26, r24
 4fa:	cb 01       	movw	r24, r22
 4fc:	90 93 61 00 	sts	0x0061, r25
 500:	80 93 60 00 	sts	0x0060, r24
 504:	08 95       	ret

00000506 <TIMER0_void_Init>:
void (*TIMER0_CTC_CallBack) (void) ;


void TIMER0_void_Init(void)
{
	TCCR0 = 0 ;
 506:	13 be       	out	0x33, r1	; 51
	TCCR0 |= TIMER0_MODE | TIMER0_PRESCALER | TIMER0_COM_EVENT ;
 508:	83 b7       	in	r24, 0x33	; 51
 50a:	85 60       	ori	r24, 0x05	; 5
 50c:	83 bf       	out	0x33, r24	; 51
	if(TIMER0_MODE != NORMAL)
	{  // set pin as output 
		SET_BIT(DIO_DDRB_REG,3) ;
	}
	// clear interrupt enable
	TIMSK &= 0xFC;
 50e:	89 b7       	in	r24, 0x39	; 57
 510:	8c 7f       	andi	r24, 0xFC	; 252
 512:	89 bf       	out	0x39, r24	; 57
	// set the interrupt state 
	TIMSK |= Int_State;
 514:	89 b7       	in	r24, 0x39	; 57
 516:	81 60       	ori	r24, 0x01	; 1
 518:	89 bf       	out	0x39, r24	; 57
	
	/*CLEAR FLAGS*/
	SET_BIT(TIFR , 0);
 51a:	88 b7       	in	r24, 0x38	; 56
 51c:	81 60       	ori	r24, 0x01	; 1
 51e:	88 bf       	out	0x38, r24	; 56
	SET_BIT(TIFR , 1);
 520:	88 b7       	in	r24, 0x38	; 56
 522:	82 60       	ori	r24, 0x02	; 2
 524:	88 bf       	out	0x38, r24	; 56
	/*Clear register*/
	TCNT0 = 0 ;
 526:	12 be       	out	0x32, r1	; 50
	OCR0 = 0 ;
 528:	1c be       	out	0x3c, r1	; 60
	

}
 52a:	08 95       	ret

0000052c <TIMER0_void_SetTimerReg>:


void TIMER0_void_SetTimerReg(u8 Copy_uint8Val)
{
	TCNT0 = Copy_uint8Val ;
 52c:	82 bf       	out	0x32, r24	; 50
}
 52e:	08 95       	ret

00000530 <TIMER0_void_SetCompareVal>:

void TIMER0_void_SetCompareVal(u8 Copy_uint8Val)
{
	OCR0 = Copy_uint8Val ;
 530:	8c bf       	out	0x3c, r24	; 60
}
 532:	08 95       	ret

00000534 <TIMER0_void_EnableOVInt>:

void TIMER0_void_EnableOVInt(void)
{
	SET_BIT(TIMSK , 0);
 534:	89 b7       	in	r24, 0x39	; 57
 536:	81 60       	ori	r24, 0x01	; 1
 538:	89 bf       	out	0x39, r24	; 57
}
 53a:	08 95       	ret

0000053c <TIMER0_void_DisableOVInt>:

void TIMER0_void_DisableOVInt(void)
{
	CLEAR_BIT(TIMSK , 0);
 53c:	89 b7       	in	r24, 0x39	; 57
 53e:	8e 7f       	andi	r24, 0xFE	; 254
 540:	89 bf       	out	0x39, r24	; 57
}
 542:	08 95       	ret

00000544 <TIMER0_void_EnableCTCInt>:

void TIMER0_void_EnableCTCInt(void)
{
	SET_BIT(TIMSK , 1);
 544:	89 b7       	in	r24, 0x39	; 57
 546:	82 60       	ori	r24, 0x02	; 2
 548:	89 bf       	out	0x39, r24	; 57
}
 54a:	08 95       	ret

0000054c <TIMER0_void_DisableCTCInt>:

void TIMER0_void_DisableCTCInt(void)
{
	CLEAR_BIT(TIMSK , 1);
 54c:	89 b7       	in	r24, 0x39	; 57
 54e:	8d 7f       	andi	r24, 0xFD	; 253
 550:	89 bf       	out	0x39, r24	; 57
}
 552:	08 95       	ret

00000554 <TIMER0_void_SetOVCallBack>:

void TIMER0_void_SetOVCallBack(void (*Copy_ptr) (void) )
{
	if(Copy_ptr!= NULL)
 554:	00 97       	sbiw	r24, 0x00	; 0
 556:	21 f0       	breq	.+8      	; 0x560 <TIMER0_void_SetOVCallBack+0xc>
	{
		TIMER0_OV_CallBack = Copy_ptr ;
 558:	90 93 69 00 	sts	0x0069, r25
 55c:	80 93 68 00 	sts	0x0068, r24
 560:	08 95       	ret

00000562 <TIMER0_void_SetCTCCallBack>:
	
}

void TIMER0_void_SetCTCCallBack(void (*Copy_ptr) (void) )
{    
	if(Copy_ptr!= NULL)
 562:	00 97       	sbiw	r24, 0x00	; 0
 564:	21 f0       	breq	.+8      	; 0x56e <TIMER0_void_SetCTCCallBack+0xc>
	{
		TIMER0_CTC_CallBack = Copy_ptr ;
 566:	90 93 67 00 	sts	0x0067, r25
 56a:	80 93 66 00 	sts	0x0066, r24
 56e:	08 95       	ret

00000570 <__vector_11>:
	}		
	
}

void __vector_11(void)
{
 570:	1f 92       	push	r1
 572:	0f 92       	push	r0
 574:	0f b6       	in	r0, 0x3f	; 63
 576:	0f 92       	push	r0
 578:	11 24       	eor	r1, r1
 57a:	2f 93       	push	r18
 57c:	3f 93       	push	r19
 57e:	4f 93       	push	r20
 580:	5f 93       	push	r21
 582:	6f 93       	push	r22
 584:	7f 93       	push	r23
 586:	8f 93       	push	r24
 588:	9f 93       	push	r25
 58a:	af 93       	push	r26
 58c:	bf 93       	push	r27
 58e:	ef 93       	push	r30
 590:	ff 93       	push	r31
	if(TIMER0_OV_CallBack != NULL)
 592:	e0 91 68 00 	lds	r30, 0x0068
 596:	f0 91 69 00 	lds	r31, 0x0069
 59a:	30 97       	sbiw	r30, 0x00	; 0
 59c:	09 f0       	breq	.+2      	; 0x5a0 <__vector_11+0x30>
	{
		TIMER0_OV_CallBack();
 59e:	09 95       	icall
	}		
}
 5a0:	ff 91       	pop	r31
 5a2:	ef 91       	pop	r30
 5a4:	bf 91       	pop	r27
 5a6:	af 91       	pop	r26
 5a8:	9f 91       	pop	r25
 5aa:	8f 91       	pop	r24
 5ac:	7f 91       	pop	r23
 5ae:	6f 91       	pop	r22
 5b0:	5f 91       	pop	r21
 5b2:	4f 91       	pop	r20
 5b4:	3f 91       	pop	r19
 5b6:	2f 91       	pop	r18
 5b8:	0f 90       	pop	r0
 5ba:	0f be       	out	0x3f, r0	; 63
 5bc:	0f 90       	pop	r0
 5be:	1f 90       	pop	r1
 5c0:	18 95       	reti

000005c2 <__vector_10>:


void __vector_10(void)
{
 5c2:	1f 92       	push	r1
 5c4:	0f 92       	push	r0
 5c6:	0f b6       	in	r0, 0x3f	; 63
 5c8:	0f 92       	push	r0
 5ca:	11 24       	eor	r1, r1
 5cc:	2f 93       	push	r18
 5ce:	3f 93       	push	r19
 5d0:	4f 93       	push	r20
 5d2:	5f 93       	push	r21
 5d4:	6f 93       	push	r22
 5d6:	7f 93       	push	r23
 5d8:	8f 93       	push	r24
 5da:	9f 93       	push	r25
 5dc:	af 93       	push	r26
 5de:	bf 93       	push	r27
 5e0:	ef 93       	push	r30
 5e2:	ff 93       	push	r31
	if(TIMER0_CTC_CallBack !=NULL)
 5e4:	e0 91 66 00 	lds	r30, 0x0066
 5e8:	f0 91 67 00 	lds	r31, 0x0067
 5ec:	30 97       	sbiw	r30, 0x00	; 0
 5ee:	09 f0       	breq	.+2      	; 0x5f2 <__vector_10+0x30>
	{
		TIMER0_CTC_CallBack();
 5f0:	09 95       	icall
	}
	
}
 5f2:	ff 91       	pop	r31
 5f4:	ef 91       	pop	r30
 5f6:	bf 91       	pop	r27
 5f8:	af 91       	pop	r26
 5fa:	9f 91       	pop	r25
 5fc:	8f 91       	pop	r24
 5fe:	7f 91       	pop	r23
 600:	6f 91       	pop	r22
 602:	5f 91       	pop	r21
 604:	4f 91       	pop	r20
 606:	3f 91       	pop	r19
 608:	2f 91       	pop	r18
 60a:	0f 90       	pop	r0
 60c:	0f be       	out	0x3f, r0	; 63
 60e:	0f 90       	pop	r0
 610:	1f 90       	pop	r1
 612:	18 95       	reti

00000614 <TIMER1_void_Init>:


void TIMER1_void_Init(void)
{
	// set prescaler 
	TCCR1B  &= T1_PRESCALER_MASK ;
 614:	8e b5       	in	r24, 0x2e	; 46
 616:	88 7f       	andi	r24, 0xF8	; 248
 618:	8e bd       	out	0x2e, r24	; 46
	TCCR1B  |= T1_PRESCALER  ;
 61a:	8e b5       	in	r24, 0x2e	; 46
 61c:	83 60       	ori	r24, 0x03	; 3
 61e:	8e bd       	out	0x2e, r24	; 46
	#elif(TIMER1_COM_EVENT == TIMER1_CLEAR )
	#if(TIMER1_CTC_CHANNEL==TIMER1_CHANNEL_A)
	CLEAR_BIT(TCCR1A , 6);
	SET_BIT(TCCR1A , 7);
	#elif(TIMER1_CTC_CHANNEL==TIMER1_CHANNEL_B)
	CLEAR_BIT(TCCR1A , 4);
 620:	8f b5       	in	r24, 0x2f	; 47
 622:	8f 7e       	andi	r24, 0xEF	; 239
 624:	8f bd       	out	0x2f, r24	; 47
	SET_BIT(TCCR1A , 5);
 626:	8f b5       	in	r24, 0x2f	; 47
 628:	80 62       	ori	r24, 0x20	; 32
 62a:	8f bd       	out	0x2f, r24	; 47
	SET_BIT(TCCR1A , 4);
	SET_BIT(TCCR1A , 5);
	#endif
	#endif
	/*Disable Interrupts*/
	CLEAR_BIT(TIMSK , 2);
 62c:	89 b7       	in	r24, 0x39	; 57
 62e:	8b 7f       	andi	r24, 0xFB	; 251
 630:	89 bf       	out	0x39, r24	; 57
	CLEAR_BIT(TIMSK , 3);
 632:	89 b7       	in	r24, 0x39	; 57
 634:	87 7f       	andi	r24, 0xF7	; 247
 636:	89 bf       	out	0x39, r24	; 57
	CLEAR_BIT(TIMSK , 4);
 638:	89 b7       	in	r24, 0x39	; 57
 63a:	8f 7e       	andi	r24, 0xEF	; 239
 63c:	89 bf       	out	0x39, r24	; 57
	CLEAR_BIT(TIMSK , 5);
 63e:	89 b7       	in	r24, 0x39	; 57
 640:	8f 7d       	andi	r24, 0xDF	; 223
 642:	89 bf       	out	0x39, r24	; 57
	/*CLEAR FLAGS*/
	SET_BIT(TIFR , 2);
 644:	88 b7       	in	r24, 0x38	; 56
 646:	84 60       	ori	r24, 0x04	; 4
 648:	88 bf       	out	0x38, r24	; 56
	SET_BIT(TIFR , 3);
 64a:	88 b7       	in	r24, 0x38	; 56
 64c:	88 60       	ori	r24, 0x08	; 8
 64e:	88 bf       	out	0x38, r24	; 56
	SET_BIT(TIFR , 4);
 650:	88 b7       	in	r24, 0x38	; 56
 652:	80 61       	ori	r24, 0x10	; 16
 654:	88 bf       	out	0x38, r24	; 56
	SET_BIT(TIFR , 5);
 656:	88 b7       	in	r24, 0x38	; 56
 658:	80 62       	ori	r24, 0x20	; 32
 65a:	88 bf       	out	0x38, r24	; 56
	/*Clear register*/
	TCNT1 = 0 ;
 65c:	1d bc       	out	0x2d, r1	; 45
 65e:	1c bc       	out	0x2c, r1	; 44
	OCR1A = 0 ;
 660:	1b bc       	out	0x2b, r1	; 43
 662:	1a bc       	out	0x2a, r1	; 42
	OCR1B = 0 ;
 664:	19 bc       	out	0x29, r1	; 41
 666:	18 bc       	out	0x28, r1	; 40
	
	
}
 668:	08 95       	ret

0000066a <TIMER1_void_SetTimerReg>:


void TIMER1_void_SetTimerReg(u16 Copy_uint16Val)
{
	TCNT1= Copy_uint16Val ;
 66a:	9d bd       	out	0x2d, r25	; 45
 66c:	8c bd       	out	0x2c, r24	; 44
}
 66e:	08 95       	ret

00000670 <TIMER1_void_SetCompare_A_Val>:


void TIMER1_void_SetCompare_A_Val(u16 Copy_uint16Val) 
{
	OCR1A = Copy_uint16Val ;
 670:	9b bd       	out	0x2b, r25	; 43
 672:	8a bd       	out	0x2a, r24	; 42
}
 674:	08 95       	ret

00000676 <TIMER1_void_SetCompare_B_Val>:
void TIMER1_void_SetCompare_B_Val(u16 Copy_uint16Val) 
{
	OCR1B = Copy_uint16Val ;
 676:	99 bd       	out	0x29, r25	; 41
 678:	88 bd       	out	0x28, r24	; 40
}
 67a:	08 95       	ret

0000067c <TIMER1_void_EnableOVInt>:
void TIMER1_void_EnableOVInt(void) 
{
	SET_BIT(TIMSK,TOIE1) ;
 67c:	89 b7       	in	r24, 0x39	; 57
 67e:	84 60       	ori	r24, 0x04	; 4
 680:	89 bf       	out	0x39, r24	; 57
}
 682:	08 95       	ret

00000684 <TIMER1_void_DisableOVInt>:
void TIMER1_void_DisableOVInt(void) 
{
	CLEAR_BIT(TIMSK,TOIE1) ;
 684:	89 b7       	in	r24, 0x39	; 57
 686:	8b 7f       	andi	r24, 0xFB	; 251
 688:	89 bf       	out	0x39, r24	; 57
}
 68a:	08 95       	ret

0000068c <TIMER1_void_EnableCTC_A_Int>:
void TIMER1_void_EnableCTC_A_Int(void) 
{
	SET_BIT(TIMSK,OCIE1A);
 68c:	89 b7       	in	r24, 0x39	; 57
 68e:	80 61       	ori	r24, 0x10	; 16
 690:	89 bf       	out	0x39, r24	; 57
}
 692:	08 95       	ret

00000694 <TIMER1_void_EnableICInt>:
void TIMER1_void_EnableICInt(void)
{
	SET_BIT(TIMSK,TICIE1);
 694:	89 b7       	in	r24, 0x39	; 57
 696:	80 62       	ori	r24, 0x20	; 32
 698:	89 bf       	out	0x39, r24	; 57
}
 69a:	08 95       	ret

0000069c <TIMER1_void_EnableCTC_B_Int>:
void TIMER1_void_EnableCTC_B_Int(void)
{
	SET_BIT(TIMSK,OCIE1B);
 69c:	89 b7       	in	r24, 0x39	; 57
 69e:	88 60       	ori	r24, 0x08	; 8
 6a0:	89 bf       	out	0x39, r24	; 57
}
 6a2:	08 95       	ret

000006a4 <TIMER1_void_DisableCTC_A_Int>:
void TIMER1_void_DisableCTC_A_Int(void) 
{
	CLEAR_BIT(TIMSK,OCIE1A);
 6a4:	89 b7       	in	r24, 0x39	; 57
 6a6:	8f 7e       	andi	r24, 0xEF	; 239
 6a8:	89 bf       	out	0x39, r24	; 57
}
 6aa:	08 95       	ret

000006ac <TIMER1_void_DisableCTCBInt>:
void TIMER1_void_DisableCTCBInt(void)
{
	CLEAR_BIT(TIMSK,OCIE1B);
 6ac:	89 b7       	in	r24, 0x39	; 57
 6ae:	87 7f       	andi	r24, 0xF7	; 247
 6b0:	89 bf       	out	0x39, r24	; 57
}
 6b2:	08 95       	ret

000006b4 <TIMER1_void_DisableICInt>:
void TIMER1_void_DisableICInt(void)
{
	CLEAR_BIT(TIMSK,TICIE1);
 6b4:	89 b7       	in	r24, 0x39	; 57
 6b6:	8f 7d       	andi	r24, 0xDF	; 223
 6b8:	89 bf       	out	0x39, r24	; 57
}
 6ba:	08 95       	ret

000006bc <TIMER1_void_SetOVCallBack>:


void TIMER1_void_SetOVCallBack(void (*Copy_ptr) (void) ) 
{
	if(Copy_ptr!= NULL)
 6bc:	00 97       	sbiw	r24, 0x00	; 0
 6be:	21 f0       	breq	.+8      	; 0x6c8 <TIMER1_void_SetOVCallBack+0xc>
	{
		TIMER1_OV_CallBack= Copy_ptr ;
 6c0:	90 93 6d 00 	sts	0x006D, r25
 6c4:	80 93 6c 00 	sts	0x006C, r24
 6c8:	08 95       	ret

000006ca <TIMER1_void_SetCTCACallBack>:
	}
}

void TIMER1_void_SetCTCACallBack(void (*Copy_ptr) (void) ) 
{
	if(Copy_ptr != NULL)
 6ca:	00 97       	sbiw	r24, 0x00	; 0
 6cc:	21 f0       	breq	.+8      	; 0x6d6 <TIMER1_void_SetCTCACallBack+0xc>
	{
		TIMER1_CTC_A_CallBack =Copy_ptr ;
 6ce:	90 93 6f 00 	sts	0x006F, r25
 6d2:	80 93 6e 00 	sts	0x006E, r24
 6d6:	08 95       	ret

000006d8 <TIMER1_void_SetCTCBCallBack>:
	}
}
void TIMER1_void_SetCTCBCallBack(void (*Copy_ptr) (void) ) 
{
	if(Copy_ptr != NULL)
 6d8:	00 97       	sbiw	r24, 0x00	; 0
 6da:	21 f0       	breq	.+8      	; 0x6e4 <TIMER1_void_SetCTCBCallBack+0xc>
	{
		TIMER1_CTC_B_CallBack = Copy_ptr ;
 6dc:	90 93 71 00 	sts	0x0071, r25
 6e0:	80 93 70 00 	sts	0x0070, r24
 6e4:	08 95       	ret

000006e6 <TIMER1_void_SetCAPTURECallBack>:
	
}
void TIMER1_void_SetCAPTURECallBack(void (*Copy_ptr) (void) ) 
{
	
	if(Copy_ptr != NULL)
 6e6:	00 97       	sbiw	r24, 0x00	; 0
 6e8:	21 f0       	breq	.+8      	; 0x6f2 <TIMER1_void_SetCAPTURECallBack+0xc>
	{
		TIMER1_IC_Callback= Copy_ptr ;
 6ea:	90 93 6b 00 	sts	0x006B, r25
 6ee:	80 93 6a 00 	sts	0x006A, r24
 6f2:	08 95       	ret

000006f4 <__vector_6>:
	}
}

void __vector_6(void)
{ 
 6f4:	1f 92       	push	r1
 6f6:	0f 92       	push	r0
 6f8:	0f b6       	in	r0, 0x3f	; 63
 6fa:	0f 92       	push	r0
 6fc:	11 24       	eor	r1, r1
 6fe:	2f 93       	push	r18
 700:	3f 93       	push	r19
 702:	4f 93       	push	r20
 704:	5f 93       	push	r21
 706:	6f 93       	push	r22
 708:	7f 93       	push	r23
 70a:	8f 93       	push	r24
 70c:	9f 93       	push	r25
 70e:	af 93       	push	r26
 710:	bf 93       	push	r27
 712:	ef 93       	push	r30
 714:	ff 93       	push	r31
	if(TIMER1_IC_Callback != NULL)
 716:	e0 91 6a 00 	lds	r30, 0x006A
 71a:	f0 91 6b 00 	lds	r31, 0x006B
 71e:	30 97       	sbiw	r30, 0x00	; 0
 720:	09 f0       	breq	.+2      	; 0x724 <__vector_6+0x30>
	{
		TIMER1_IC_Callback();
 722:	09 95       	icall
	}
}
 724:	ff 91       	pop	r31
 726:	ef 91       	pop	r30
 728:	bf 91       	pop	r27
 72a:	af 91       	pop	r26
 72c:	9f 91       	pop	r25
 72e:	8f 91       	pop	r24
 730:	7f 91       	pop	r23
 732:	6f 91       	pop	r22
 734:	5f 91       	pop	r21
 736:	4f 91       	pop	r20
 738:	3f 91       	pop	r19
 73a:	2f 91       	pop	r18
 73c:	0f 90       	pop	r0
 73e:	0f be       	out	0x3f, r0	; 63
 740:	0f 90       	pop	r0
 742:	1f 90       	pop	r1
 744:	18 95       	reti

00000746 <__vector_7>:
void __vector_7(void) 
{
 746:	1f 92       	push	r1
 748:	0f 92       	push	r0
 74a:	0f b6       	in	r0, 0x3f	; 63
 74c:	0f 92       	push	r0
 74e:	11 24       	eor	r1, r1
 750:	2f 93       	push	r18
 752:	3f 93       	push	r19
 754:	4f 93       	push	r20
 756:	5f 93       	push	r21
 758:	6f 93       	push	r22
 75a:	7f 93       	push	r23
 75c:	8f 93       	push	r24
 75e:	9f 93       	push	r25
 760:	af 93       	push	r26
 762:	bf 93       	push	r27
 764:	ef 93       	push	r30
 766:	ff 93       	push	r31
	if(TIMER1_CTC_A_CallBack != NULL)
 768:	e0 91 6e 00 	lds	r30, 0x006E
 76c:	f0 91 6f 00 	lds	r31, 0x006F
 770:	30 97       	sbiw	r30, 0x00	; 0
 772:	09 f0       	breq	.+2      	; 0x776 <__vector_7+0x30>
	{
		TIMER1_CTC_A_CallBack();
 774:	09 95       	icall
	}
}
 776:	ff 91       	pop	r31
 778:	ef 91       	pop	r30
 77a:	bf 91       	pop	r27
 77c:	af 91       	pop	r26
 77e:	9f 91       	pop	r25
 780:	8f 91       	pop	r24
 782:	7f 91       	pop	r23
 784:	6f 91       	pop	r22
 786:	5f 91       	pop	r21
 788:	4f 91       	pop	r20
 78a:	3f 91       	pop	r19
 78c:	2f 91       	pop	r18
 78e:	0f 90       	pop	r0
 790:	0f be       	out	0x3f, r0	; 63
 792:	0f 90       	pop	r0
 794:	1f 90       	pop	r1
 796:	18 95       	reti

00000798 <__vector_8>:
void __vector_8(void)
{
 798:	1f 92       	push	r1
 79a:	0f 92       	push	r0
 79c:	0f b6       	in	r0, 0x3f	; 63
 79e:	0f 92       	push	r0
 7a0:	11 24       	eor	r1, r1
 7a2:	2f 93       	push	r18
 7a4:	3f 93       	push	r19
 7a6:	4f 93       	push	r20
 7a8:	5f 93       	push	r21
 7aa:	6f 93       	push	r22
 7ac:	7f 93       	push	r23
 7ae:	8f 93       	push	r24
 7b0:	9f 93       	push	r25
 7b2:	af 93       	push	r26
 7b4:	bf 93       	push	r27
 7b6:	ef 93       	push	r30
 7b8:	ff 93       	push	r31
	if(TIMER1_CTC_B_CallBack != NULL)
 7ba:	e0 91 70 00 	lds	r30, 0x0070
 7be:	f0 91 71 00 	lds	r31, 0x0071
 7c2:	30 97       	sbiw	r30, 0x00	; 0
 7c4:	09 f0       	breq	.+2      	; 0x7c8 <__vector_8+0x30>
	{
		TIMER1_CTC_B_CallBack();
 7c6:	09 95       	icall
	}
}
 7c8:	ff 91       	pop	r31
 7ca:	ef 91       	pop	r30
 7cc:	bf 91       	pop	r27
 7ce:	af 91       	pop	r26
 7d0:	9f 91       	pop	r25
 7d2:	8f 91       	pop	r24
 7d4:	7f 91       	pop	r23
 7d6:	6f 91       	pop	r22
 7d8:	5f 91       	pop	r21
 7da:	4f 91       	pop	r20
 7dc:	3f 91       	pop	r19
 7de:	2f 91       	pop	r18
 7e0:	0f 90       	pop	r0
 7e2:	0f be       	out	0x3f, r0	; 63
 7e4:	0f 90       	pop	r0
 7e6:	1f 90       	pop	r1
 7e8:	18 95       	reti

000007ea <__vector_9>:
void __vector_9(void)
{
 7ea:	1f 92       	push	r1
 7ec:	0f 92       	push	r0
 7ee:	0f b6       	in	r0, 0x3f	; 63
 7f0:	0f 92       	push	r0
 7f2:	11 24       	eor	r1, r1
 7f4:	2f 93       	push	r18
 7f6:	3f 93       	push	r19
 7f8:	4f 93       	push	r20
 7fa:	5f 93       	push	r21
 7fc:	6f 93       	push	r22
 7fe:	7f 93       	push	r23
 800:	8f 93       	push	r24
 802:	9f 93       	push	r25
 804:	af 93       	push	r26
 806:	bf 93       	push	r27
 808:	ef 93       	push	r30
 80a:	ff 93       	push	r31
	if(TIMER1_OV_CallBack != NULL)
 80c:	e0 91 6c 00 	lds	r30, 0x006C
 810:	f0 91 6d 00 	lds	r31, 0x006D
 814:	30 97       	sbiw	r30, 0x00	; 0
 816:	09 f0       	breq	.+2      	; 0x81a <__vector_9+0x30>
	{
		TIMER1_OV_CallBack();
 818:	09 95       	icall
	}
 81a:	ff 91       	pop	r31
 81c:	ef 91       	pop	r30
 81e:	bf 91       	pop	r27
 820:	af 91       	pop	r26
 822:	9f 91       	pop	r25
 824:	8f 91       	pop	r24
 826:	7f 91       	pop	r23
 828:	6f 91       	pop	r22
 82a:	5f 91       	pop	r21
 82c:	4f 91       	pop	r20
 82e:	3f 91       	pop	r19
 830:	2f 91       	pop	r18
 832:	0f 90       	pop	r0
 834:	0f be       	out	0x3f, r0	; 63
 836:	0f 90       	pop	r0
 838:	1f 90       	pop	r1
 83a:	18 95       	reti

0000083c <__divsf3>:
 83c:	0c d0       	rcall	.+24     	; 0x856 <__divsf3x>
 83e:	e6 c0       	rjmp	.+460    	; 0xa0c <__fp_round>
 840:	de d0       	rcall	.+444    	; 0x9fe <__fp_pscB>
 842:	40 f0       	brcs	.+16     	; 0x854 <__divsf3+0x18>
 844:	d5 d0       	rcall	.+426    	; 0x9f0 <__fp_pscA>
 846:	30 f0       	brcs	.+12     	; 0x854 <__divsf3+0x18>
 848:	21 f4       	brne	.+8      	; 0x852 <__divsf3+0x16>
 84a:	5f 3f       	cpi	r21, 0xFF	; 255
 84c:	19 f0       	breq	.+6      	; 0x854 <__divsf3+0x18>
 84e:	c7 c0       	rjmp	.+398    	; 0x9de <__fp_inf>
 850:	51 11       	cpse	r21, r1
 852:	10 c1       	rjmp	.+544    	; 0xa74 <__fp_szero>
 854:	ca c0       	rjmp	.+404    	; 0x9ea <__fp_nan>

00000856 <__divsf3x>:
 856:	eb d0       	rcall	.+470    	; 0xa2e <__fp_split3>
 858:	98 f3       	brcs	.-26     	; 0x840 <__divsf3+0x4>

0000085a <__divsf3_pse>:
 85a:	99 23       	and	r25, r25
 85c:	c9 f3       	breq	.-14     	; 0x850 <__divsf3+0x14>
 85e:	55 23       	and	r21, r21
 860:	b1 f3       	breq	.-20     	; 0x84e <__divsf3+0x12>
 862:	95 1b       	sub	r25, r21
 864:	55 0b       	sbc	r21, r21
 866:	bb 27       	eor	r27, r27
 868:	aa 27       	eor	r26, r26
 86a:	62 17       	cp	r22, r18
 86c:	73 07       	cpc	r23, r19
 86e:	84 07       	cpc	r24, r20
 870:	38 f0       	brcs	.+14     	; 0x880 <__stack+0x21>
 872:	9f 5f       	subi	r25, 0xFF	; 255
 874:	5f 4f       	sbci	r21, 0xFF	; 255
 876:	22 0f       	add	r18, r18
 878:	33 1f       	adc	r19, r19
 87a:	44 1f       	adc	r20, r20
 87c:	aa 1f       	adc	r26, r26
 87e:	a9 f3       	breq	.-22     	; 0x86a <__stack+0xb>
 880:	33 d0       	rcall	.+102    	; 0x8e8 <__stack+0x89>
 882:	0e 2e       	mov	r0, r30
 884:	3a f0       	brmi	.+14     	; 0x894 <__stack+0x35>
 886:	e0 e8       	ldi	r30, 0x80	; 128
 888:	30 d0       	rcall	.+96     	; 0x8ea <__stack+0x8b>
 88a:	91 50       	subi	r25, 0x01	; 1
 88c:	50 40       	sbci	r21, 0x00	; 0
 88e:	e6 95       	lsr	r30
 890:	00 1c       	adc	r0, r0
 892:	ca f7       	brpl	.-14     	; 0x886 <__stack+0x27>
 894:	29 d0       	rcall	.+82     	; 0x8e8 <__stack+0x89>
 896:	fe 2f       	mov	r31, r30
 898:	27 d0       	rcall	.+78     	; 0x8e8 <__stack+0x89>
 89a:	66 0f       	add	r22, r22
 89c:	77 1f       	adc	r23, r23
 89e:	88 1f       	adc	r24, r24
 8a0:	bb 1f       	adc	r27, r27
 8a2:	26 17       	cp	r18, r22
 8a4:	37 07       	cpc	r19, r23
 8a6:	48 07       	cpc	r20, r24
 8a8:	ab 07       	cpc	r26, r27
 8aa:	b0 e8       	ldi	r27, 0x80	; 128
 8ac:	09 f0       	breq	.+2      	; 0x8b0 <__stack+0x51>
 8ae:	bb 0b       	sbc	r27, r27
 8b0:	80 2d       	mov	r24, r0
 8b2:	bf 01       	movw	r22, r30
 8b4:	ff 27       	eor	r31, r31
 8b6:	93 58       	subi	r25, 0x83	; 131
 8b8:	5f 4f       	sbci	r21, 0xFF	; 255
 8ba:	2a f0       	brmi	.+10     	; 0x8c6 <__stack+0x67>
 8bc:	9e 3f       	cpi	r25, 0xFE	; 254
 8be:	51 05       	cpc	r21, r1
 8c0:	68 f0       	brcs	.+26     	; 0x8dc <__stack+0x7d>
 8c2:	8d c0       	rjmp	.+282    	; 0x9de <__fp_inf>
 8c4:	d7 c0       	rjmp	.+430    	; 0xa74 <__fp_szero>
 8c6:	5f 3f       	cpi	r21, 0xFF	; 255
 8c8:	ec f3       	brlt	.-6      	; 0x8c4 <__stack+0x65>
 8ca:	98 3e       	cpi	r25, 0xE8	; 232
 8cc:	dc f3       	brlt	.-10     	; 0x8c4 <__stack+0x65>
 8ce:	86 95       	lsr	r24
 8d0:	77 95       	ror	r23
 8d2:	67 95       	ror	r22
 8d4:	b7 95       	ror	r27
 8d6:	f7 95       	ror	r31
 8d8:	9f 5f       	subi	r25, 0xFF	; 255
 8da:	c9 f7       	brne	.-14     	; 0x8ce <__stack+0x6f>
 8dc:	88 0f       	add	r24, r24
 8de:	91 1d       	adc	r25, r1
 8e0:	96 95       	lsr	r25
 8e2:	87 95       	ror	r24
 8e4:	97 f9       	bld	r25, 7
 8e6:	08 95       	ret
 8e8:	e1 e0       	ldi	r30, 0x01	; 1
 8ea:	66 0f       	add	r22, r22
 8ec:	77 1f       	adc	r23, r23
 8ee:	88 1f       	adc	r24, r24
 8f0:	bb 1f       	adc	r27, r27
 8f2:	62 17       	cp	r22, r18
 8f4:	73 07       	cpc	r23, r19
 8f6:	84 07       	cpc	r24, r20
 8f8:	ba 07       	cpc	r27, r26
 8fa:	20 f0       	brcs	.+8      	; 0x904 <__stack+0xa5>
 8fc:	62 1b       	sub	r22, r18
 8fe:	73 0b       	sbc	r23, r19
 900:	84 0b       	sbc	r24, r20
 902:	ba 0b       	sbc	r27, r26
 904:	ee 1f       	adc	r30, r30
 906:	88 f7       	brcc	.-30     	; 0x8ea <__stack+0x8b>
 908:	e0 95       	com	r30
 90a:	08 95       	ret

0000090c <__fixunssfsi>:
 90c:	98 d0       	rcall	.+304    	; 0xa3e <__fp_splitA>
 90e:	88 f0       	brcs	.+34     	; 0x932 <__fixunssfsi+0x26>
 910:	9f 57       	subi	r25, 0x7F	; 127
 912:	90 f0       	brcs	.+36     	; 0x938 <__fixunssfsi+0x2c>
 914:	b9 2f       	mov	r27, r25
 916:	99 27       	eor	r25, r25
 918:	b7 51       	subi	r27, 0x17	; 23
 91a:	a0 f0       	brcs	.+40     	; 0x944 <__fixunssfsi+0x38>
 91c:	d1 f0       	breq	.+52     	; 0x952 <__fixunssfsi+0x46>
 91e:	66 0f       	add	r22, r22
 920:	77 1f       	adc	r23, r23
 922:	88 1f       	adc	r24, r24
 924:	99 1f       	adc	r25, r25
 926:	1a f0       	brmi	.+6      	; 0x92e <__fixunssfsi+0x22>
 928:	ba 95       	dec	r27
 92a:	c9 f7       	brne	.-14     	; 0x91e <__fixunssfsi+0x12>
 92c:	12 c0       	rjmp	.+36     	; 0x952 <__fixunssfsi+0x46>
 92e:	b1 30       	cpi	r27, 0x01	; 1
 930:	81 f0       	breq	.+32     	; 0x952 <__fixunssfsi+0x46>
 932:	9f d0       	rcall	.+318    	; 0xa72 <__fp_zero>
 934:	b1 e0       	ldi	r27, 0x01	; 1
 936:	08 95       	ret
 938:	9c c0       	rjmp	.+312    	; 0xa72 <__fp_zero>
 93a:	67 2f       	mov	r22, r23
 93c:	78 2f       	mov	r23, r24
 93e:	88 27       	eor	r24, r24
 940:	b8 5f       	subi	r27, 0xF8	; 248
 942:	39 f0       	breq	.+14     	; 0x952 <__fixunssfsi+0x46>
 944:	b9 3f       	cpi	r27, 0xF9	; 249
 946:	cc f3       	brlt	.-14     	; 0x93a <__fixunssfsi+0x2e>
 948:	86 95       	lsr	r24
 94a:	77 95       	ror	r23
 94c:	67 95       	ror	r22
 94e:	b3 95       	inc	r27
 950:	d9 f7       	brne	.-10     	; 0x948 <__fixunssfsi+0x3c>
 952:	3e f4       	brtc	.+14     	; 0x962 <__fixunssfsi+0x56>
 954:	90 95       	com	r25
 956:	80 95       	com	r24
 958:	70 95       	com	r23
 95a:	61 95       	neg	r22
 95c:	7f 4f       	sbci	r23, 0xFF	; 255
 95e:	8f 4f       	sbci	r24, 0xFF	; 255
 960:	9f 4f       	sbci	r25, 0xFF	; 255
 962:	08 95       	ret

00000964 <__floatunsisf>:
 964:	e8 94       	clt
 966:	09 c0       	rjmp	.+18     	; 0x97a <__floatsisf+0x12>

00000968 <__floatsisf>:
 968:	97 fb       	bst	r25, 7
 96a:	3e f4       	brtc	.+14     	; 0x97a <__floatsisf+0x12>
 96c:	90 95       	com	r25
 96e:	80 95       	com	r24
 970:	70 95       	com	r23
 972:	61 95       	neg	r22
 974:	7f 4f       	sbci	r23, 0xFF	; 255
 976:	8f 4f       	sbci	r24, 0xFF	; 255
 978:	9f 4f       	sbci	r25, 0xFF	; 255
 97a:	99 23       	and	r25, r25
 97c:	a9 f0       	breq	.+42     	; 0x9a8 <__floatsisf+0x40>
 97e:	f9 2f       	mov	r31, r25
 980:	96 e9       	ldi	r25, 0x96	; 150
 982:	bb 27       	eor	r27, r27
 984:	93 95       	inc	r25
 986:	f6 95       	lsr	r31
 988:	87 95       	ror	r24
 98a:	77 95       	ror	r23
 98c:	67 95       	ror	r22
 98e:	b7 95       	ror	r27
 990:	f1 11       	cpse	r31, r1
 992:	f8 cf       	rjmp	.-16     	; 0x984 <__floatsisf+0x1c>
 994:	fa f4       	brpl	.+62     	; 0x9d4 <__floatsisf+0x6c>
 996:	bb 0f       	add	r27, r27
 998:	11 f4       	brne	.+4      	; 0x99e <__floatsisf+0x36>
 99a:	60 ff       	sbrs	r22, 0
 99c:	1b c0       	rjmp	.+54     	; 0x9d4 <__floatsisf+0x6c>
 99e:	6f 5f       	subi	r22, 0xFF	; 255
 9a0:	7f 4f       	sbci	r23, 0xFF	; 255
 9a2:	8f 4f       	sbci	r24, 0xFF	; 255
 9a4:	9f 4f       	sbci	r25, 0xFF	; 255
 9a6:	16 c0       	rjmp	.+44     	; 0x9d4 <__floatsisf+0x6c>
 9a8:	88 23       	and	r24, r24
 9aa:	11 f0       	breq	.+4      	; 0x9b0 <__floatsisf+0x48>
 9ac:	96 e9       	ldi	r25, 0x96	; 150
 9ae:	11 c0       	rjmp	.+34     	; 0x9d2 <__floatsisf+0x6a>
 9b0:	77 23       	and	r23, r23
 9b2:	21 f0       	breq	.+8      	; 0x9bc <__floatsisf+0x54>
 9b4:	9e e8       	ldi	r25, 0x8E	; 142
 9b6:	87 2f       	mov	r24, r23
 9b8:	76 2f       	mov	r23, r22
 9ba:	05 c0       	rjmp	.+10     	; 0x9c6 <__floatsisf+0x5e>
 9bc:	66 23       	and	r22, r22
 9be:	71 f0       	breq	.+28     	; 0x9dc <__floatsisf+0x74>
 9c0:	96 e8       	ldi	r25, 0x86	; 134
 9c2:	86 2f       	mov	r24, r22
 9c4:	70 e0       	ldi	r23, 0x00	; 0
 9c6:	60 e0       	ldi	r22, 0x00	; 0
 9c8:	2a f0       	brmi	.+10     	; 0x9d4 <__floatsisf+0x6c>
 9ca:	9a 95       	dec	r25
 9cc:	66 0f       	add	r22, r22
 9ce:	77 1f       	adc	r23, r23
 9d0:	88 1f       	adc	r24, r24
 9d2:	da f7       	brpl	.-10     	; 0x9ca <__floatsisf+0x62>
 9d4:	88 0f       	add	r24, r24
 9d6:	96 95       	lsr	r25
 9d8:	87 95       	ror	r24
 9da:	97 f9       	bld	r25, 7
 9dc:	08 95       	ret

000009de <__fp_inf>:
 9de:	97 f9       	bld	r25, 7
 9e0:	9f 67       	ori	r25, 0x7F	; 127
 9e2:	80 e8       	ldi	r24, 0x80	; 128
 9e4:	70 e0       	ldi	r23, 0x00	; 0
 9e6:	60 e0       	ldi	r22, 0x00	; 0
 9e8:	08 95       	ret

000009ea <__fp_nan>:
 9ea:	9f ef       	ldi	r25, 0xFF	; 255
 9ec:	80 ec       	ldi	r24, 0xC0	; 192
 9ee:	08 95       	ret

000009f0 <__fp_pscA>:
 9f0:	00 24       	eor	r0, r0
 9f2:	0a 94       	dec	r0
 9f4:	16 16       	cp	r1, r22
 9f6:	17 06       	cpc	r1, r23
 9f8:	18 06       	cpc	r1, r24
 9fa:	09 06       	cpc	r0, r25
 9fc:	08 95       	ret

000009fe <__fp_pscB>:
 9fe:	00 24       	eor	r0, r0
 a00:	0a 94       	dec	r0
 a02:	12 16       	cp	r1, r18
 a04:	13 06       	cpc	r1, r19
 a06:	14 06       	cpc	r1, r20
 a08:	05 06       	cpc	r0, r21
 a0a:	08 95       	ret

00000a0c <__fp_round>:
 a0c:	09 2e       	mov	r0, r25
 a0e:	03 94       	inc	r0
 a10:	00 0c       	add	r0, r0
 a12:	11 f4       	brne	.+4      	; 0xa18 <__fp_round+0xc>
 a14:	88 23       	and	r24, r24
 a16:	52 f0       	brmi	.+20     	; 0xa2c <__fp_round+0x20>
 a18:	bb 0f       	add	r27, r27
 a1a:	40 f4       	brcc	.+16     	; 0xa2c <__fp_round+0x20>
 a1c:	bf 2b       	or	r27, r31
 a1e:	11 f4       	brne	.+4      	; 0xa24 <__fp_round+0x18>
 a20:	60 ff       	sbrs	r22, 0
 a22:	04 c0       	rjmp	.+8      	; 0xa2c <__fp_round+0x20>
 a24:	6f 5f       	subi	r22, 0xFF	; 255
 a26:	7f 4f       	sbci	r23, 0xFF	; 255
 a28:	8f 4f       	sbci	r24, 0xFF	; 255
 a2a:	9f 4f       	sbci	r25, 0xFF	; 255
 a2c:	08 95       	ret

00000a2e <__fp_split3>:
 a2e:	57 fd       	sbrc	r21, 7
 a30:	90 58       	subi	r25, 0x80	; 128
 a32:	44 0f       	add	r20, r20
 a34:	55 1f       	adc	r21, r21
 a36:	59 f0       	breq	.+22     	; 0xa4e <__fp_splitA+0x10>
 a38:	5f 3f       	cpi	r21, 0xFF	; 255
 a3a:	71 f0       	breq	.+28     	; 0xa58 <__fp_splitA+0x1a>
 a3c:	47 95       	ror	r20

00000a3e <__fp_splitA>:
 a3e:	88 0f       	add	r24, r24
 a40:	97 fb       	bst	r25, 7
 a42:	99 1f       	adc	r25, r25
 a44:	61 f0       	breq	.+24     	; 0xa5e <__fp_splitA+0x20>
 a46:	9f 3f       	cpi	r25, 0xFF	; 255
 a48:	79 f0       	breq	.+30     	; 0xa68 <__fp_splitA+0x2a>
 a4a:	87 95       	ror	r24
 a4c:	08 95       	ret
 a4e:	12 16       	cp	r1, r18
 a50:	13 06       	cpc	r1, r19
 a52:	14 06       	cpc	r1, r20
 a54:	55 1f       	adc	r21, r21
 a56:	f2 cf       	rjmp	.-28     	; 0xa3c <__fp_split3+0xe>
 a58:	46 95       	lsr	r20
 a5a:	f1 df       	rcall	.-30     	; 0xa3e <__fp_splitA>
 a5c:	08 c0       	rjmp	.+16     	; 0xa6e <__fp_splitA+0x30>
 a5e:	16 16       	cp	r1, r22
 a60:	17 06       	cpc	r1, r23
 a62:	18 06       	cpc	r1, r24
 a64:	99 1f       	adc	r25, r25
 a66:	f1 cf       	rjmp	.-30     	; 0xa4a <__fp_splitA+0xc>
 a68:	86 95       	lsr	r24
 a6a:	71 05       	cpc	r23, r1
 a6c:	61 05       	cpc	r22, r1
 a6e:	08 94       	sec
 a70:	08 95       	ret

00000a72 <__fp_zero>:
 a72:	e8 94       	clt

00000a74 <__fp_szero>:
 a74:	bb 27       	eor	r27, r27
 a76:	66 27       	eor	r22, r22
 a78:	77 27       	eor	r23, r23
 a7a:	cb 01       	movw	r24, r22
 a7c:	97 f9       	bld	r25, 7
 a7e:	08 95       	ret

00000a80 <_exit>:
 a80:	f8 94       	cli

00000a82 <__stop_program>:
 a82:	ff cf       	rjmp	.-2      	; 0xa82 <__stop_program>
